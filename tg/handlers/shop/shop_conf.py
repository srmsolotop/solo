from aiogram import Router, F, Bot
from asgiref.sync import sync_to_async
from ...models import Shop, TelegramUser
from ... import text
from aiogram.types import Message, CallbackQuery, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.filters import Command, CommandObject
from ...states import ShopConfigurationsState
from aiogram.fsm.context import FSMContext
from aiogram.enums.parse_mode import ParseMode
router = Router()


@router.callback_query(F.data == "shop_conf")
async def shop_config(callback_query: CallbackQuery, bot: Bot):
    user = await sync_to_async(TelegramUser.objects.get)(user_id=callback_query.from_user.id)
    if user.is_shop:
        try:
            shop = await sync_to_async(Shop.objects.get)(owner=user)
            builder = InlineKeyboardBuilder()
            builder.add(InlineKeyboardButton(text="‚úçÔ∏è –ù–∞–∑–≤–∞–Ω–∏–µ", callback_data=f"shopedit_title_{shop.id}"))
            builder.add(InlineKeyboardButton(text="‚úçÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ", callback_data=f"shopedit_description_{shop.id}"))
            builder.add(InlineKeyboardButton(text="‚úçÔ∏è –û–ø–µ—Ä–∞—Ç–æ—Ä", callback_data=f"shopedit_operator_{shop.id}"))
            builder.add(InlineKeyboardButton(text="‚úçÔ∏è –°–∞–ø–ø–æ—Ä—Ç", callback_data=f"shopedit_support_{shop.id}"))
            builder.add(InlineKeyboardButton(text="‚úçÔ∏è Bot", callback_data=f"shopedit_bot_{shop.id}"))
            builder.add(InlineKeyboardButton(text="‚úçÔ∏è –§–æ—Ç–æ", callback_data=f"shopedit_photo_{shop.id}"))
            builder.add(InlineKeyboardButton(text="‚úçÔ∏è –ö–∞–Ω–∞–ª", callback_data=f"shopedit_channel_{shop.id}"))
            builder.add(InlineKeyboardButton(text="‚úçÔ∏è –ß–∞—Ç", callback_data=f"shopedit_chat_{shop.id}"))
            builder.add(InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data=f"back"))
            builder.adjust(2, 2, 2, 2, 1)
            await callback_query.message.delete()
            await callback_query.message.answer(text.shop_conf_text, reply_markup=builder.as_markup(), parse_mode=ParseMode.MARKDOWN)
        except Exception as e:
            print(e)


@router.callback_query(F.data.startswith("shopedit_"))
async def shop_edit_owner(callback_query: CallbackQuery, state: FSMContext):
    data = callback_query.data.split("_")
    if data[1] == "title":
        text = "‚öô –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É\n`/editshoptitle` –ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ"
        await callback_query.message.answer(text, parse_mode=ParseMode.MARKDOWN)
    elif data[1] == "description":
        text = "‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ"
        await callback_query.message.answer(text)
        await state.set_state(ShopConfigurationsState.awaiting_description)
    elif data[1] == "operator":
        text = ("‚öô –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É\n`/editshopoperator` –ù–æ–≤–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å\n\n"
                "‚ùï –í–ê–ñ–ù–û! –°—Å—ã–ª–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤ –æ–±—Ä–∞–∑–µ https\n_–ù–∞–ø—Ä–∏–º–µ—Ä https://t.me/telegram_")
        await callback_query.message.answer(text, parse_mode=ParseMode.MARKDOWN)
    elif data[1] == "support":
        text = ("‚öô –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–∞–ø–ø–æ—Ä—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É\n`/editshopsupport` –ù–æ–≤–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å\n\n"
                "‚ùï –í–ê–ñ–ù–û! –°—Å—ã–ª–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤ –æ–±—Ä–∞–∑–µ https\n_–ù–∞–ø—Ä–∏–º–µ—Ä https://t.me/telegram_")
        await callback_query.message.answer(text, parse_mode=ParseMode.MARKDOWN)
    elif data[1] == "bot":
        text = ("‚öô –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–æ—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É\n`/editshopbot` –ù–æ–≤–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –±–æ—Ç\n\n"
                "‚ùï –í–ê–ñ–ù–û! –°—Å—ã–ª–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤ –æ–±—Ä–∞–∑–µ https\n_–ù–∞–ø—Ä–∏–º–µ—Ä https://t.me/telegram_")
        await callback_query.message.answer(text, parse_mode=ParseMode.MARKDOWN)
    elif data[1] == "photo":
        text = "üóæ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ —Ñ–æ—Ç–æ –≤–∞—à–µ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞"
        await state.set_state(ShopConfigurationsState.awaiting_photo)
        await callback_query.message.answer(text)
    elif data[1] == "channel":
        text = ("‚öô –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞ –∫–∞–Ω–∞–ª–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É\n`/editshopchannel` _–ù–æ–≤–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª_")
        await callback_query.message.answer(text, parse_mode=ParseMode.MARKDOWN)
    elif data[1] == "chat":
        text = ("‚öô –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞ —á–∞—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É\n/editshopchat _–ù–æ–≤–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ —á–∞—Ç_")
        await callback_query.message.answer(text, parse_mode=ParseMode.MARKDOWN)


@router.message(Command("editshoptitle"))
async def edit_shop_title(msg: Message, bot: Bot, command: CommandObject):
    data = command.args
    user = await sync_to_async(TelegramUser.objects.get)(user_id=msg.from_user.id)
    if user.is_shop:
        try:
            shop = await sync_to_async(Shop.objects.get)(owner=user)
            shop.title = data
            shop.save(update_fields=['title'])
            await msg.answer(f"üõé –£—Å–ø–µ—à–Ω–æ!\n–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ {data}")
        except Exception as e:
                print(e)


@router.message(ShopConfigurationsState.awaiting_description)
async def shop_edit_description(msg: Message, state: FSMContext):
    user = await sync_to_async(TelegramUser.objects.get)(user_id=msg.from_user.id)
    if user.is_shop:
        try:
            shop = await sync_to_async(Shop.objects.get)(owner=user)
            shop.description = msg.text
            shop.save(update_fields=['description'])
            await msg.answer(f"üõé –£—Å–ø–µ—à–Ω–æ!\n–ù–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ‚Ü©\n\n{msg.text}")
            await state.clear()
        except Exception as e:
                print(e)


@router.message(Command("editshopoperator"))
async def edit_shop_operator(msg: Message, bot: Bot, command: CommandObject):
    data = command.args
    user = await sync_to_async(TelegramUser.objects.get)(user_id=msg.from_user.id)
    if user.is_shop:
        if data.lower().startswith("https:"):
            try:
                shop = await sync_to_async(Shop.objects.get)(owner=user)
                shop.operator = data
                shop.save(update_fields=['operator'])
                await msg.answer(f"üõé –£—Å–ø–µ—à–Ω–æ!\n–ù–æ–≤—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä {data}")
            except Exception as e:
                    print(e)


@router.message(Command("editshopsupport"))
async def edit_shop_support(msg: Message, bot: Bot, command: CommandObject):
    data = command.args
    user = await sync_to_async(TelegramUser.objects.get)(user_id=msg.from_user.id)
    if user.is_shop:
        if data.lower().startswith("https:"):
            try:
                shop = await sync_to_async(Shop.objects.get)(owner=user)
                shop.support = data
                shop.save(update_fields=['support'])
                await msg.answer(f"üõé –£—Å–ø–µ—à–Ω–æ!\n–ù–æ–≤—ã–π —Å–∞–ø–ø–æ—Ä—Ç {data}")
            except Exception as e:
                    print(e)


@router.message(Command("editshopbot"))
async def edit_shop_bot(msg: Message, bot: Bot, command: CommandObject):
    data = command.args
    user = await sync_to_async(TelegramUser.objects.get)(user_id=msg.from_user.id)
    if user.is_shop:
        if data.lower().startswith("https:"):
            try:
                shop = await sync_to_async(Shop.objects.get)(owner=user)
                shop.bot = data
                shop.save(update_fields=['bot'])
                await msg.answer(f"üõé –£—Å–ø–µ—à–Ω–æ!\n–ù–æ–≤—ã–π –∞–¥—Ä–µ—Å –±–æ—Ç–∞ {data}")
            except Exception as e:
                    print(e)


@router.message(Command("editshopchannel"))
async def edit_shop_channel(msg: Message, bot: Bot, command: CommandObject):
    data = command.args
    user = await sync_to_async(TelegramUser.objects.get)(user_id=msg.from_user.id)
    if user.is_shop:
        if data.lower().startswith("https:"):
            try:
                shop = await sync_to_async(Shop.objects.get)(owner=user)
                shop.channel = data
                shop.save(update_fields=['channel'])
                await msg.answer(f"üõé –£—Å–ø–µ—à–Ω–æ!\n–ù–æ–≤—ã–π –∞–¥—Ä–µ—Å –∫–∞–Ω–∞–ª–∞ {data}")
            except Exception as e:
                    print(e)


@router.message(ShopConfigurationsState.awaiting_photo)
async def shop_edit_photo(msg: Message, state: FSMContext):
    user = await sync_to_async(TelegramUser.objects.get)(user_id=msg.from_user.id)
    if user.is_shop:
        try:
            shop = await sync_to_async(Shop.objects.get)(owner=user)
            if msg.photo:
                photo_id = msg.photo[0].file_id
                shop.photo = photo_id
                shop.save(update_fields=['photo'])
                await msg.answer(f"üõé –£—Å–ø–µ—à–Ω–æ!\n–ù–æ–≤–æ–µ —Ñ–æ—Ç–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ‚Ü©\n\n{msg.text}")
                await state.clear()
        except Exception as e:
                print(e)


@router.message(Command("editshopchat"))
async def edit_shop_chat(msg: Message, bot: Bot, command: CommandObject):
    data = command.args
    user = await sync_to_async(TelegramUser.objects.get)(user_id=msg.from_user.id)
    if user.is_shop:
        if data.lower().startswith("https:"):
            try:
                shop = await sync_to_async(Shop.objects.get)(owner=user)
                shop.chat = data
                shop.save(update_fields=['chat'])
                await msg.answer(f"üõé –£—Å–ø–µ—à–Ω–æ!\n–ù–æ–≤—ã–π –∞–¥—Ä–µ—Å —á–∞—Ç–∞ {data}")
            except Exception as e:
                    print(e)